Expressions
-----------
=> Use dynamic values and expressions in workflows.
=> They must be declared with the ${{<expression>}} syntax
It can be a combination of Literal values, Context values, Functions

Look at 07 -workflows


Variables (Refer the 08 workflow)
---------
=> We can set and reuse variables We can set variables at
* Workflow level
* job level
* step level

var at ste > job > workflow

we can set the variables with env keyword.


For variables used in multiple workflows we can define them at the 
* organization level
* repository level
* environment level

var at env > repo > org

we can retrieve the environment variables with the ${{env.MY_VARIABLE}}



Functions
----------

General purpose Functions
--------------------------
=> set of  functions to interact with data from multiple contexts and model complex behavior like more control of the workflow and job execution.
ex: contains(), startsWith(), endsWith()...


Status check functions
------------------------
=> we use them to check the status of workflow, previous jobs or steps to define whether a certain job.step should be executed.
failure() - executes the job/step only if any of the previous jobs/steps failed.
success() - true when everything before the job has been executed successfully.
always() - executes the job/steps regardless of the outcome of previous jobs/steps.
cancelled() - used to execute jobs/steps only if the worklfow run was cancelled intentionally.